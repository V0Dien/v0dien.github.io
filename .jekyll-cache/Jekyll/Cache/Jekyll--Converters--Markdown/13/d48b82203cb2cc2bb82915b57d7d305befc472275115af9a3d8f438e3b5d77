I"J<p>When I started thinking about running my site on my own server instead of using Blogger or Medium, etc… And after tried to use Apache, Nginx,… I realized that combining Apache and Nginx could be the best choice for me, because I want to use <code class="language-plaintext highlighter-rouge">.htaccess</code> of Apache and speed of Nginx. There come my architecture:</p>

<p><img src="/assets/img/blog/Diagram.jpg" alt="IMG" /></p>

<p>In this post, I will use private IP range for Nginx reverse proxy server and Apache web server. Both of them are running Ubuntu 18.04 LTS.</p>

<ul>
  <li>
    <p>Apache webserver: 	10.128.0.2</p>
  </li>
  <li>
    <p>Nginx reverse proxy: 	10.128.0.3</p>
  </li>
</ul>

<h1 id="1-install-and-configure-apache-web-server">1. Install and configure Apache web server</h1>

<p>Install apache webserver:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>apt <span class="nb">install </span>apache2
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Next we create a place where to storage source code:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo mkdir</span> <span class="nt">-p</span> /var/www/html/example.com/public_html
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Change permission:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo chown</span> <span class="nt">-R</span> &lt;user&gt;:&lt;group&gt; /var/www/html/example.com/public_html
<span class="nv">$ </span><span class="nb">sudo chmod</span> <span class="nt">-R</span> 744 /var/www/html/example.com/public_html
</pre></td></tr></tbody></table></code></pre></div></div>

<p>With <strong>user</strong> and <em>*group</em> you can use command</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span>apachectl <span class="nt">-S</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Usually, it’s www-data</p>

<p>Now let’s config virutal host and port:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>vim /etc/apache2/ports.conf

Listen 8080

&lt;IfModule ssl_module&gt;
        Listen 443
&lt;/IfModule&gt;

&lt;IfModule mod_gnutls.c&gt;
        Listen 443
&lt;/IfModule&gt;

<span class="nv">$ </span><span class="nb">sudo cp</span> /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf
<span class="nv">$ </span><span class="nb">sudo </span>vim /etc/apache2/sites-available/example.com.conf

&lt;VirtualHost 10.128.0.2:8080&gt;
        ServerAdmin webmaster@example.com
        DocumentRoot /var/www/html/example.com/public_html/

        ErrorLog <span class="k">${</span><span class="nv">APACHE_LOG_DIR</span><span class="k">}</span>/error.log
        CustomLog <span class="k">${</span><span class="nv">APACHE_LOG_DIR</span><span class="k">}</span>/access.log combined
        ErrorDocument 404 /404.html
&lt;/VirtualHost&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Active your website:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>a2dissite 000-default.conf
<span class="nv">$ </span><span class="nb">sudo </span>a2ensite example.com.conf
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="2-install-and-configure-nginx">2. Install and configure Nginx</h1>
<h2 id="21-install-nginx-package">2.1 Install Nginx package</h2>

<p>Install the prerequisites:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>apt <span class="nb">install </span>curl gnupg2 ca-certificates lsb-release
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Add repository for stable nginx packages:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">"deb http://nginx.org/packages/ubuntu </span><span class="sb">`</span>lsb_release <span class="nt">-cs</span><span class="sb">`</span><span class="s2"> nginx"</span> <span class="se">\</span>
    | <span class="nb">sudo tee</span> /etc/apt/sources.list.d/nginx.list
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Import an official nginx signing key so apt could verify the packages authenticity:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span>curl <span class="nt">-fsSL</span> https://nginx.org/keys/nginx_signing.key | <span class="nb">sudo </span>apt-key add -
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Verify that you now have the proper key:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>apt-key fingerprint ABF5BD827BD9BF62
</pre></td></tr></tbody></table></code></pre></div></div>
<p>The output should contain the full fingerprint 573B FD6B 3D8F BC64 1079 A6AB ABF5 BD82 7BD9 BF62 as follows:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td> --><td class="rouge-code"><pre>pub   rsa2048 2011-08-19 <span class="o">[</span>SC] <span class="o">[</span>expires: 2024-06-14]
      573B FD6B 3D8F BC64 1079  A6AB ABF5 BD82 7BD9 BF62
uid   <span class="o">[</span> unknown] nginx signing key &lt;signing-key@nginx.com&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Finally, install Nginx:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>apt update
<span class="nv">$ </span><span class="nb">sudo </span>apt <span class="nb">install </span>nginx
</pre></td></tr></tbody></table></code></pre></div></div>
<h2 id="22-configure-nginx-reverse-proxy">2.2 Configure Nginx reverse proxy</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo cp</span> /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/example.com.conf
<span class="nv">$ </span><span class="nb">sudo </span>vim /etc/nginx/conf.d/example.com.conf
server <span class="o">{</span>

    listen       80<span class="p">;</span>
    server_name example.com<span class="p">;</span>
	port_in_redirect off<span class="p">;</span>

    location / <span class="o">{</span>
        proxy_redirect off<span class="p">;</span>
        proxy_set_header Host <span class="nv">$host</span>:<span class="nv">$server_port</span><span class="p">;</span>
        proxy_set_header X-Forwarded-Host <span class="nv">$http_host</span><span class="p">;</span>
        proxy_set_header X-Real-IP <span class="nv">$remote_addr</span><span class="p">;</span>
        proxy_set_header X-Forwarded-For <span class="nv">$proxy_add_x_forwarded_for</span><span class="p">;</span>
        proxy_pass http://10.128.0.2:8080<span class="p">;</span>
    <span class="o">}</span>

    location ~ /<span class="se">\.</span>ht <span class="o">{</span>
        deny  all<span class="p">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="23-install-and-configure-modsecurity">2.3 Install and configure Modsecurity</h2>

<p>Install the prerequisites:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>apt-get <span class="nb">install</span> <span class="nt">-y</span> apt-utils autoconf automake build-essential git libcurl4-openssl-dev libgeoip-dev liblmdb-dev libpcre++-dev libtool libxml2-dev libyajl-dev pkgconf wget zlib1g-dev
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Download Modsecurity source:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span>git clone <span class="nt">--depth</span> 1 <span class="nt">-b</span> v3/master <span class="nt">--single-branch</span> https://github.com/SpiderLabs/ModSecurity
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Compile Modsecurity:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">cd </span>ModSecurity
<span class="nv">$ </span>git submodule init
<span class="nv">$ </span>git submodule update
<span class="nv">$ </span>./build.sh
<span class="nv">$ </span>./configure
<span class="nv">$ </span>make
<span class="nv">$ </span><span class="nb">sudo </span>make <span class="nb">install</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>If you see this notification on your terminal, just ignore it and take a coffee because the process might take about 15 minutes to complete.</p>

<blockquote>
  <p>fatal: No names found, cannot describe anything.</p>
</blockquote>

<h2 id="24-download-the-nginx-connector-for-modsecurity-and-compile-it-as-a-dynamic-module">2.4 Download the NGINX Connector for ModSecurity and Compile It as a Dynamic Module</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span>git clone <span class="nt">--depth</span> 1 https://github.com/SpiderLabs/ModSecurity-nginx.git
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Check your nginx version:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span>nginx <span class="nt">-v</span>

nginx version: nginx/1.17.9
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Download source code:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">cd </span>nginx-1.17.9
<span class="nv">$ </span>./configure <span class="nt">--with-compat</span> <span class="nt">--add-dynamic-module</span><span class="o">=</span>../ModSecurity-nginx
<span class="nv">$ </span>make modules
<span class="nv">$ </span><span class="nb">sudo cp </span>objs/ngx_http_modsecurity_module.so /etc/nginx/modules/
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Load Nginx Modsecurity Connector by add the load_module following to the top of <code class="language-plaintext highlighter-rouge">/etc/nginx/nginx.conf</code></p>

<blockquote>
  <p>load_module modules/ngx_http_modsecurity_module.so;</p>
</blockquote>

<p>Configure and Enable Modsecurity:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo mkdir</span> /etc/nginx/modsec
<span class="nv">$ </span><span class="nb">sudo </span>wget <span class="nt">-P</span> /etc/nginx/modsec/ https://raw.githubusercontent.com/SpiderLabs/ModSecurity/v3/master/modsecurity.conf-recommended
<span class="nv">$ </span><span class="nb">sudo mv</span> /etc/nginx/modsec/modsecurity.conf-recommended /etc/nginx/modsec/modsecurity.conf
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Active dropping malicious mode:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo sed</span> <span class="nt">-i</span> <span class="s1">'s/SecRuleEngine DetectionOnly/SecRuleEngine On/'</span> /etc/nginx/modsec/modsecurity.conf
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Add modsecurity rule and config your test rule:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>vim /etc/nginx/modsec/main.conf

Include <span class="s2">"/etc/nginx/modsec/modsecurity.conf"</span>

<span class="c"># Basic test rule</span>

SecRule ARGS:testparam <span class="s2">"@contains test"</span> <span class="s2">"id:1234,deny,status:403"</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Then turn on the modsecurity in your server config:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>vim /etc/nginx/conf.d/example.com.conf

server <span class="o">{</span>
    <span class="c"># ...</span>
    modsecurity on<span class="p">;</span>
    modsecurity_rules_file /etc/nginx/modsec/main.conf<span class="p">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Check everything ok yet by command:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo </span>nginx <span class="nt">-t</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>If the output are:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
</pre></td></tr></tbody></table></code></pre></div></div>

<p>We completed 99%, if there is an error about unicode.mapping, you can fix it by the following commands:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">cd</span> /path/to/Modsecurity
<span class="nv">$ </span><span class="nb">sudo cp </span>unicode.mapping /etc/nginx/modsec/
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Check if the waf is active or not by curl. The <code class="language-plaintext highlighter-rouge">403</code> status confirmed that the rule worked:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span>curl example.com/?testparam<span class="o">=</span><span class="nb">test</span>
&lt;html&gt;
&lt;<span class="nb">head</span><span class="o">&gt;</span>&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;
&lt;body <span class="nv">bgcolor</span><span class="o">=</span><span class="s2">"white"</span><span class="o">&gt;</span>
&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;
&lt;hr&gt;&lt;center&gt;nginx/1.13.1&lt;/center&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre></td></tr></tbody></table></code></pre></div></div>
<p>This is the basic configuration, if you have any problem, just let me know and I will help you!</p>

<p>Cheers!</p>

<p>P/S: Thank you GinaTU aka Tứ Diệp Thảo to help me edit this post</p>

:ET